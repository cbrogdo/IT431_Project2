@model MasonDatabase.Models.Application

@{
    ViewBag.Title = "Edit Applicant";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Application</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.SubmitDate)

    <!--Hidden Fields Not Used-->
    @Html.HiddenFor(model => model.EmailAddress)
    @Html.HiddenFor(model => model.HomePhone)
    @Html.HiddenFor(model => model.CellPhone)
    @Html.HiddenFor(model => model.Street)
    @Html.HiddenFor(model => model.City)
    @Html.HiddenFor(model => model.State)
    @Html.HiddenFor(model => model.ZipCode)
    @Html.HiddenFor(model => model.DOB)
    @Html.HiddenFor(model => model.Gender)
    @Html.HiddenFor(model => model.SchoolName)
    @Html.HiddenFor(model => model.SchoolCity)
    @Html.HiddenFor(model => model.GradDate)
    @Html.HiddenFor(model => model.MajorID)
    @Html.HiddenFor(model => model.SSN)

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubmitDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            <!-- @Html.HiddenFor(model => model.SubmitDate, new { htmlAttributes = new { @readonly = "readonly" } })-->
            @Html.DisplayFor(model => model.SubmitDate)
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GPA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GPA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GPA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SATMath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SATMath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SATMath, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SATVerbal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SATVerbal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SATVerbal, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.SemesterID, "SemesterID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SemesterID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SemesterID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EnrollYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EnrollYear, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EnrollYear, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EnrollDecision, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.RadioButton("EnrollDecision", "Admit") Admit
            <br />
            @Html.RadioButton("EnrollDecision", "Reject") Reject
            <br />
            @Html.RadioButton("EnrollDecision", "Wait List") Waitlist
            @Html.ValidationMessageFor(model => model.EnrollDecision, "", new { @class = "text-danger" })
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
